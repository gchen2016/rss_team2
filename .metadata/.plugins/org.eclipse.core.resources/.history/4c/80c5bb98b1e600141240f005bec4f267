package StateMachine;

import java.util.ArrayList;

import Challenge.GrandChallengeMap;
import MotionPlanning.CSpace;
import MotionPlanning.GoalAdjLists;
import MotionPlanning.MultiRRT;
import MotionPlanning.PolygonObstacle;
import MotionPlanning.RRT;
import StateMachine.FSM.msgENUM;
import StateMachine.FSM.stateENUM;

/**
 * This state initializes the robot to the starting positions engaging all motors and servos
 */
public class Initialize implements FSMState {


	private FSM fsm;	

	public Initialize(FSM stateMachine)
		{
		fsm = stateMachine;

		GrandChallengeMap challengeMap = GrandChallengeMap.parseFile(mapFileName);
		CSpace cSpace = new CSpace(); 
		ArrayList<ArrayList<PolygonObstacle>> obsCSpaces = cSpace.generateCSpace(challengeMap, false);			//this was adding the robot as an OBSTACLE!!! was true TODO
        challengeMap.set3DCSpace(obsCSpaces);

		fsm.RRTengine =  new MultiRRT(challengeMap);
		fsm.foundPaths = new GoalAdjLists();
				
		challengeMap.getConstructionObjects();
		challengeMap.getRobotStart();
		challengeMap.getRobotGoal();
		
		fsm.RRTengine.getPaths(start, goals, tolerance)
		}	

	
	public stateENUM getName()
		{return stateENUM.INITIALIZE;}

	
	public boolean accepts(msgENUM msgType)
		{
		if (msgType == msgENUM.WHEELS) return true;
		return false;
		}


	public void update(Object msg)
		{
		//do stuff

		//if condition to leave state
		//fsm.updateState(new NextState(fsm));

		}


}